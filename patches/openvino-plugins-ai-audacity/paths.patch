diff --color -ruN mod-openvino.orig/OVAudioSR.cpp mod-openvino/OVAudioSR.cpp
--- mod-openvino.orig/OVAudioSR.cpp	2025-04-26 15:56:46.861144303 +0300
+++ mod-openvino/OVAudioSR.cpp	2025-04-26 16:00:47.323405438 +0300
@@ -52,7 +52,7 @@
 {
    std::vector<std::string> available_models;
 
-   auto model_folder = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+   auto model_folder = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
    model_folder = wxFileName(model_folder, wxT("audiosr")).GetFullPath();
 
    //make sure that all of the 'base' models are present
@@ -607,7 +607,7 @@
       //todo: Right now we're looking for the model in the 'BaseDir' (which is top-level folder of Audacity install)
       // This might be okay, but some users may not have permissions to place models there. So, also look in
       // DataDir(), which is the path to C:\Users\<user>\AppData\Roaming\audacity.
-      auto model_folder_wx = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+      auto model_folder_wx = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
       auto model_folder = audacity::ToUTF8(wxFileName(model_folder_wx, wxT("audiosr")).GetFullPath());
 
       FilePath cache_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-model-cache")).GetFullPath());
diff --color -ruN mod-openvino.orig/OVMusicGenerationLLM.cpp mod-openvino/OVMusicGenerationLLM.cpp
--- mod-openvino.orig/OVMusicGenerationLLM.cpp	2025-04-26 15:56:46.862479864 +0300
+++ mod-openvino/OVMusicGenerationLLM.cpp	2025-04-26 16:00:47.329323234 +0300
@@ -70,7 +70,7 @@
 {
    std::vector<std::string> available_models;
 
-   auto model_folder = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+   auto model_folder = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
    model_folder = wxFileName(model_folder, wxT("musicgen")).GetFullPath();
 
    //make sure that a couple of the 'base' models, like EnCodec, tokenizer are present.
@@ -301,7 +301,7 @@
    bool bGoodResult = true;
 
    {
-      FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath());
+      FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath());
       std::string musicgen_model_folder = audacity::ToUTF8(wxFileName(model_folder, wxString("musicgen"))
          .GetFullPath());
 
diff --color -ruN mod-openvino.orig/OVMusicSeparation.cpp mod-openvino/OVMusicSeparation.cpp
--- mod-openvino.orig/OVMusicSeparation.cpp	2025-04-26 15:56:46.863791883 +0300
+++ mod-openvino/OVMusicSeparation.cpp	2025-04-26 16:00:47.323431730 +0300
@@ -254,7 +254,7 @@
       //todo: Right now we're looking for the model in the 'BaseDir' (which is top-level folder of Audacity install)
       // This might be okay, but some users may not have permissions to place models there. So, also look in
       // DataDir(), which is the path to C:\Users\<user>\AppData\Roaming\audacity.
-      FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath());
+      FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath());
       std::string demucs_v4_path = audacity::ToUTF8(wxFileName(model_folder, wxT("htdemucs_v4.xml"))
          .GetFullPath());
 
diff --color -ruN mod-openvino.orig/OVNoiseSuppression.cpp mod-openvino/OVNoiseSuppression.cpp
--- mod-openvino.orig/OVNoiseSuppression.cpp	2025-04-26 15:56:46.865271447 +0300
+++ mod-openvino/OVNoiseSuppression.cpp	2025-04-26 16:00:47.329279025 +0300
@@ -50,7 +50,7 @@
 
 static bool is_deepfilter_model_present(std::string deepfilter_basename)
 {
-   auto model_folder = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+   auto model_folder = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
    model_folder = wxFileName(model_folder, wxString(deepfilter_basename)).GetFullPath();
 
    std::vector< std::string > model_basenames = { "enc", "erb_dec", "df_dec" };
@@ -77,7 +77,7 @@
 
 static bool is_omz_model_present(std::string omz_model_basename)
 {
-   auto model_folder = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+   auto model_folder = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
 
    auto binmodelpath = wxFileName(model_folder, wxString(omz_model_basename + ".bin"));
    auto xmlmodelpath = wxFileName(model_folder, wxString(omz_model_basename + ".xml"));
@@ -384,7 +384,7 @@
          try
          {
             //CompileNoiseSuppression(compiledModel);
-            FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath());
+            FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath());
             FilePath cache_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-model-cache")).GetFullPath());
             std::string cache_path = wstring_to_string(wxFileName(cache_folder).GetFullPath().ToStdWstring());
 
diff --color -ruN mod-openvino.orig/OVWhisperTranscription.cpp mod-openvino/OVWhisperTranscription.cpp
--- mod-openvino.orig/OVWhisperTranscription.cpp	2025-04-26 15:56:46.867815026 +0300
+++ mod-openvino/OVWhisperTranscription.cpp	2025-04-26 16:00:47.323457689 +0300
@@ -292,7 +292,7 @@
 static bool is_whisper_model_present(std::string whisper_basename)
 {
    std::cout << "is_whisper_model_present(" << whisper_basename << ")" << std::endl;
-   auto model_folder = wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath();
+   auto model_folder = wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath();
 
    {
       std::string ggml_binname = std::string("ggml-") + whisper_basename + std::string(".bin");
@@ -877,7 +877,7 @@
    params.prompt = mInitialPrompt;
 
    //whisper init
-   FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::BaseDir(), wxT("openvino-models")).GetFullPath());
+   FilePath model_folder = FileNames::MkDir(wxFileName(FileNames::DataDir(), wxT("openvino-models")).GetFullPath());
    std::string whisper_variant = mSupportedModels[m_modelSelectionChoice];
    std::string ggml_binname = std::string("ggml-") + whisper_variant + std::string(".bin");
    std::string whisper_model_path = audacity::ToUTF8(wxFileName(model_folder, wxString(ggml_binname))
